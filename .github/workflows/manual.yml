name: "[Compute Platform] Integration Tests"
# Run tests for Compute Platform after merge and as a cron job
on:
  schedule: # Trigger for scheduled integration tests
    - cron: '*/2 * * * *' # Runs scheduled integration tests
  workflow_dispatch: # Manual trigger
    inputs:
      environment:
        description: "Choose the environment to run tests on (e.g., dev, prod)"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - stage
          - prod
      test_suite:
        description: "Specify which tests to run (e.g., on_demand, integration)"
        required: true
        default: "Integration-Tests"
        type: choice
        options:
          - pluto_integration_tests
          - pluto_ondemand_tests
          - Autorecovery_integration_test

env:
  SECRET_GITHUB_ACCESS_TOKEN: ${{ secrets.GH_PAT }}
  TAG: ${{ github.ref_name }}
  ARTIFACTORY_UW2_USER: ${{ secrets.POC_ARTIFACTORY_UW2_USER }}
  ARTIFACTORY_UW2_API_TOKEN: ${{ secrets.POC_ARTIFACTORY_UW2_API_TOKEN }}
  PLUTO_E2E_TESTS_CLIENT_ID: ${{ secrets.PLUTO_E2E_TESTS_CLIENT_ID }}
  PLUTO_E2E_TESTS_CLIENT_SECRET: ${{ secrets.PLUTO_E2E_TESTS_CLIENT_SECRET }}
  TMPDIR: "/mnt/localssd/colligo_cache/tmp"
  PIP_CACHE_DIR: "/mnt/localssd/colligo_cache/pip_cache"
  UV_CACHE_DIR: "/mnt/localssd/colligo_cache/uv_cache"
  COLLIGO_MODEL_CACHE_DIR: "/mnt/localssd/colligo_cache"
  ACTIONS_STEP_DEBUG: true
  UV_LINK_MODE: "symlink"
  SLACK_WEBHOOK_URL: "https://hooks.slack.com/services/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"

jobs:
  Autorecovery_integration_tests: # Workflow for Autorecovery_integration_tests
    name: 'Autorecovery Integration Tests'
    if: github.event_name.schedule == '*/2 * * * *' || (github.event_name == 'workflow_dispatch' && github.event.inputs.test_suite == 'Autorecovery-Integration-Test' && github.event.inputs.environment == 'stage')
    runs-on:
      - scale-set-runners-cpu
    steps:
      - name: Checkout project
      - name: Setup venv
        
      - name: Run tests
        run: |
          if [ "${{ github.event.inputs.environment }}" == "" ]; then
            if [ "${{ github.event.schedule }}" == "0 */12 * * *" ]; then
                PLUTO_ENV=stage
                echo 'stage'
            fi
          else
              PLUTO_ENV=${{ github.event.inputs.environment }}
          fi
          echo "PLUTO_ENV=$PLUTO_ENV" >> $GITHUB_ENV
      - name: Send notification to Slack on failure
        if: ${{ failure() }}
        run: |
            echo "GitHub Step Summary File:"
          
