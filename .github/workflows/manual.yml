name: "[Compute Platform] Integration Tests"
# Run tests for Compute Platform after merge and as a cron job
on:
  schedule: # Trigger for scheduled integration tests
    - cron: '*/2 * * * *' # Runs scheduled integration tests every 2 minutes
  workflow_dispatch: # Manual trigger
    inputs:
      environment:
        description: "Choose the environment to run tests on (e.g., dev, prod)"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - stage
          - prod
      test_suite:
        description: "Specify which tests to run (e.g., on_demand, integration)"
        required: true
        default: "pluto_integration_tests"
        type: choice
        options:
          - pluto_integration_tests
          - pluto_ondemand_tests
          - Autorecovery_integration_test

jobs:
  Autorecovery_integration_tests: # Workflow for Autorecovery_integration_tests
    name: "Autorecovery Integration Tests"
    if: >-
      (github.event.schedule != '*/3 * * * *' && github.event_name == 'schedule') || 
      (github.event_name == 'workflow_dispatch' &&
       github.event.inputs.test_suite == 'Autorecovery_integration_test' &&
       github.event.inputs.environment == 'stage')
    runs-on: scale-set-runners-cpu
    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Setup Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Run tests
        env:
          PLUTO_ENV: ${{ github.event.inputs.environment || 'stage' }}
        run: |
          echo "Running tests in PLUTO_ENV=$PLUTO_ENV"
      
      - name: Send notification to Slack on failure
        if: ${{ failure() }}
        run: |
          echo "Tests failed. Sending notification to Slack..."
      
